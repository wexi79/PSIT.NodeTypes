prototype(PSIT.NodeTypes:Section) {
    tagName = 'section'
    attributes.class = ${q(node).property('classes')}
    attributes.id = ${q(node).property('id')}
    bg-image = ${q(node).property('bg-image')}
    content = Neos.Neos:ContentCollectionRenderer
    @process.contentElementWrapping = Neos.Neos:ContentElementWrapping
    templatePath = 'resource://PSIT.NodeTypes/Private/Templates/NodeTypes/Section.html'
}

prototype(PSIT.NodeTypes:Container) < prototype(Neos.Fusion:Tag) {
    attributes.class = ${'container' + (q(node).property('fluid') ? '-fluid ' : '') + q(node).property('classes')}
    attributes.id = ${q(node).property('id')}
    content = Neos.Neos:ContentCollectionRenderer
    @process.contentElementWrapping = Neos.Neos:ContentElementWrapping
}

prototype(PSIT.NodeTypes:Row) < prototype(Neos.Fusion:Tag) {
    attributes.class = ${'row ' + q(node).property('classes')}
    attributes.id = ${q(node).property('id')}
    content = Neos.Neos:ContentCollectionRenderer
    @process.contentElementWrapping = Neos.Neos:ContentElementWrapping
}

prototype(PSIT.NodeTypes:Column) < prototype(Neos.Fusion:Tag) {
    attributes.class = ${'col' + (q(node).property('lg') ?' col-lg-' + q(node).property('lg') : '') + (q(node).property('md') ? ' col-md-' + q(node).property('md') : '') + (q(node).property('sm') ? ' col-sm-' + q(node).property('sm') : '') + (q(node).property('xs') ? ' col-xs-' + q(node).property('xs') : '') + ' ' + q(node).property('classes')}
    attributes.id = ${q(node).property('id')}
    content = Neos.Neos:ContentCollectionRenderer
    @process.contentElementWrapping = Neos.Neos:ContentElementWrapping
}

prototype(PSIT.NodeTypes:ResponsiveImage) < prototype(Neos.NodeTypes:Image) {
    classes = ${q(node).property('classes')}
}

prototype(PSIT.NodeTypes:ExtendedHeadline){
    classes = ${q(node).property('classes')}
}

prototype(PSIT.NodeTypes:Panel){
    templatePath = 'resource://PSIT.NodeTypes/Private/Templates/NodeTypes/Panel.html'
    minHeight = ${q(node).property('minHeight')}
    classes = ${q(node).property('classes')}
    bodyclasses = ${q(node).property('bodyclasses')}
    headclasses = ${q(node).property('headclasses')}
    footclasses = ${q(node).property('footclasses')}
    id = ${q(node).property('id')}
    heading = ${q(node).property('heading')}
    footer = ${q(node).property('footer')}
    foo = 'TRUE'
    footerlink = ${q(node).property('footerlink')}
    panelNodes = Neos.Neos:ContentCollectionRenderer
    @process.contentElementWrapping = Neos.Neos:ContentElementWrapping
}

prototype(PSIT.NodeTypes:D3Pie){
    templatePath = 'resource://PSIT.NodeTypes/Private/Templates/NodeTypes/D3Pie.html'
    pieId = ${q(node).property('pieId')}
    height = ${q(node).property('height')}
    width = ${q(node).property('width')}
    outerRadius = ${q(node).property('outerRadius')}
    innerRadius = ${q(node).property('innerRadius')}
    pieNodes = Neos.Neos:ContentCollectionRenderer
    pieData = Neos.Fusion:Collection {
      collection = ${q(node).children().children().filter('[instanceof PSIT.NodeTypes:D3PieData]').get()}
        itemRenderer = ${'{ "label": "' + q(item).property('title') + '", "value": "' + q(item).property('dataValue') + (q(item).property('color') ? '", "color": "' + q(item).property('color') : '') + '" }|'}
    }

    @process.contentElementWrapping = Neos.Neos:ContentElementWrapping
}

prototype(PSIT.NodeTypes:D3PieData){
    templatePath = 'resource://PSIT.NodeTypes/Private/Templates/NodeTypes/D3PieData.html'
    color = ${q(node).property('color')}

}